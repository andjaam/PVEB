{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chat/chat.component.ts","webpack:///src/app/chat/chat.component.html","webpack:///src/app/form/form.component.ts","webpack:///src/app/form/form.component.html","webpack:///src/app/models/user.model.ts","webpack:///src/app/playground/playground.component.ts","webpack:///src/app/playground/playground.component.html","webpack:///src/app/services/canvas.service.ts","webpack:///src/app/services/chat.service.ts","webpack:///src/app/services/socket.service.ts","webpack:///src/app/utils/http-error-handler.model.ts","webpack:///src/app/whiteboard/whiteboard.component.ts","webpack:///src/app/whiteboard/whiteboard.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ChatComponent","chatService","data","messages","colors","getMessages","subscribe","message","color","push","sendMessage","input","document","getElementById","addEventListener","event","key","preventDefault","click","FormComponent","prikaziInfo","prikaziPravila","pridruzivanjeSobi","pravljenjeNoveSobe","username","roomCode","roomName","setUsername","joinToRoom","createNewRoomRequest","onUnosImena","onPridruzivanjeSobi","onPravljenjeNoveSobe","onPrikaziInfo","onPrikaziPravila","names","UserData","name","points","indexColor","Math","floor","random","length","indexName","PlaygroundComponent","CanvasService","socketService","url","socket","emit","observer","on","next","providedIn","ChatService","http","router","user","post","pipe","window","alert","SocketService","URL","process","env","PORT","sock","HttpErrorHandler","error","ErrorEvent","console","navigate","statusCode","status","WhiteboardComponent","canvasService","active","getCanvasEvent","img","Image","src","ctx","drawImage","sendCanvasData","board","toDataURL","penColor","penSize","htmlCanvas","rectCanvas","getBoundingClientRect","getContext","evt","startDrawing","endDrawing","draw","beginPath","lineWidth","strokeStyle","lineCap","lineTo","clientX","left","clientY","top","stroke","moveTo","clearRect","width","height","background","onPenSmall","onPenMidSmall","onPenMidBig","onPenBig","onClearCanvas","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormComponent } from './form/form.component';\nimport { PlaygroundComponent } from './playground/playground.component';\n\n\nconst routes: Routes = [\n  { path: '', component: FormComponent },\n  { path: 'game', component: PlaygroundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'skrabo';\n}\n","<!--\n<app-form></app-form>\n\n<app-whiteboard></app-whiteboard>\n-->\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormComponent } from './form/form.component';\nimport { WhiteboardComponent } from './whiteboard/whiteboard.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { PlaygroundComponent } from './playground/playground.component';\n\nimport { ChatService } from './services/chat.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormComponent,\n    WhiteboardComponent,\n    ChatComponent,\n    PlaygroundComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    // tslint:disable-next-line: deprecation\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../services/chat.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css'],\n})\nexport class ChatComponent implements OnInit {\n\n  message: string;\n  data = {\n    messages: [],\n    colors: []\n  };\n  input: HTMLElement;\n\n  constructor(private chatService: ChatService) {\n    this.chatService\n      .getMessages()\n      .subscribe(({ message, color }) => {\n        this.data.messages.push(message);\n        this.data.colors.push(color);\n      });\n  }\n\n  sendMessage() {\n    this.chatService.sendMessage(this.message);\n    this.message = '';\n  }\n\n  ngOnInit(): void {\n    // setup for sending text by Enter\n    this.input = document.getElementById('text');\n    this.input.addEventListener('keyup', (event) => {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n        document.getElementById('send').click();\n      }\n    });\n  }\n\n}\n","<div>\n    <div id=\"chat\" #scrollMe [scrollTop]=\"scrollMe.scrollHeight\">\n        <div id=\"message\" *ngFor=\"let message of data.messages; let i = index;\" \n        [ngStyle]=\"{'color': data.colors[i]}\">\n            {{message}}\n        </div>\n    </div>\n\n    <div id=\"input\">\n        <input id=\"text\" [(ngModel)]=\"message\">\n        <button id=\"send\" (click)=\"sendMessage()\">Send</button>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../services/chat.service';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n  private prikaziInfo: boolean = false;\n  private prikaziPravila: boolean = false;\n  private pridruzivanjeSobi: boolean = true;\n  private pravljenjeNoveSobe: boolean = true;\n  constructor(private chatService: ChatService) {\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n  get getPravljenjeNoveSobe(): boolean {\n    return this.pravljenjeNoveSobe;\n  }\n\n  get getPrikaziPravila(): boolean {\n    return this.prikaziPravila;\n  }\n  get getPrikaziInfo(): boolean {\n    return this.prikaziInfo;\n  }\n\n  get getPridruzivanjeSobi(): boolean {\n    return this.pridruzivanjeSobi;\n  }\n\n  public onPrikaziInfo(): void {\n    this.prikaziInfo = !this.prikaziInfo;\n  }\n  public onPrikaziPravila(): void {\n    this.prikaziPravila = !this.prikaziPravila;\n  }\n\n\n  public onPridruzivanjeSobi(): void {\n    this.pridruzivanjeSobi = !this.pridruzivanjeSobi;\n    this.pravljenjeNoveSobe = true;\n  }\n\n  public onPravljenjeNoveSobe(): void {\n    this.pravljenjeNoveSobe = !this.pravljenjeNoveSobe;\n    this.pridruzivanjeSobi = true;\n  }\n\n\n\n  // Metod za komunikaciju sa chat servisom. Postavlja username naseg korisnika.\n  // I u zavisnosti da li je popunio polje za pridruzivanje ili za kreiranje \n  // nove sobe chat servis vrsi neophodne operacije.\n  public onUnosImena(username: string, roomCode: string, roomName: string) {\n    this.chatService.setUsername(username);\n    if (roomCode !== '') {\n      this.chatService.joinToRoom(roomCode);\n    } else if (roomName !== '') {\n      this.chatService.createNewRoomRequest(roomName);\n    }\n\n  }\n}\n","<head>\n\t<link rel=\"icon\" href=\"assets/cope.jpg\" type=\"image/gif\" sizes=\"16x16\">\n</head>\n\n<body>\n\t<div class=\"content\">\n\t\t<h1 style=\"cursor:default\">Škrabo\n\t\t  \t<div class=\"olovka olovka_naslov\">\n\t\t\t\t<div class=\"gumica\"></div>\n\t\t\t\t<div class=\"sredina\"></div>\n\t\t\t\t<div class=\"spic\">\n\t\t\t\t\t<span class=\"vrh\"></span>\n\t\t\t\t</div>\n     \t\t</div>\n\t\t</h1>\n\t\t\n\t\t<div class=\"alert-primary\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label for=\"ime\">Unesi ime:</label>\n\t\t\t\t<input type=\"text\" id=\"ime\" class=\"form-control\" #ime>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"okvir\">\n\t\t\t\t<span class=\"animacija\"></span>\n\t\t\t\t<div class=\"olovka\">\n\t\t\t\t\t<div class=\"gumica\"></div>\n\t\t\t\t\t<div class=\"sredina\"></div>\n\t\t\t\t\t<div class=\"spic\">\n\t\t\t\t\t\t<span class=\"vrh\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"dugme\">\n\t\t\t\t<button class=\"dugme-osnovno\" [routerLink]=\"['/game']\" (click)=\"onUnosImena(ime.value, kodSobe.value, imeSobe.value)\">Igraj</button>\n\t\t\t</div>\n\t\t\t<div class=\"dugme\">\n\t\t\t\t<button class=\"dugme-osnovno\" id=\"btnPridruziSeSobi\" (click)=\"onPridruzivanjeSobi()\">Pridruzi se postojecoj sobi.</button>\n\t\t\t\t<div [hidden]=\"getPridruzivanjeSobi\">\n\t\t\t\t\t<label for=\"kodSobe\">Unesi ime sobe:</label>\n\t\t\t\t\t<br>\n\t\t\t\t\t<input type=\"text\" name=\"kodSobe\" id=\"kodSobe\" #kodSobe>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"dugme\">\n\t\t\t\t<button class=\"dugme-osnovno\" id=\"btnNovaSoba\" (click)=\"onPravljenjeNoveSobe()\">Kreiraj privatnu sobu</button>\n\t\t\t\t<div [hidden]=\"getPravljenjeNoveSobe\">\n\t\t\t\t\t<label for=\"imeSobe\">Unesi ime sobe:</label>\n\t\t\t\t\t<br>\n\t\t\t\t\t<input  type=\"text\" name=\"imeSobe\" id=\"imeSobe\" #imeSobe>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<div class=\"parent\">\n\t\t\t<img class=\"image1\" src=\"assets/cope.jpg\" alt=\"skrabo\" width=\"150\" height=\"150\">\n\t\t\t<img class=\"image2\" src=\"assets/ananas.png\" alt=\"skrabo\" width=\"150\" height=\"150\">\n\t\t\t<img class=\"image3\" src=\"assets/ker.png\" alt=\"skrabo\" width=\"150\" height=\"150\">\n\t\t</div>\n\t\t\n\t\t<div class=\"sadrzaj\">\n\t\t\t<h2 (click)=\"onPrikaziInfo()\" style=\"cursor:help\">O nama</h2>\n\t\t\t<p *ngIf=\"getPrikaziInfo\" class=\"tekst\">\n\t\t\t\tOvo je tekst o nama... <br> \n\t\t\t\tOvo je tekst o nama... <br>\n\t\t\t\tOvo je tekst o nama... <br>\n\t\t\t</p>\n\t\t\t\n\t\t\t<h2 (click)=\"onPrikaziPravila()\" style=\"cursor:help\">Pravila igre</h2>\n\t\t\t<p *ngIf=\"getPrikaziPravila\" class=\"tekst\">\n\t\t\t\tUputstva za igru idu ovde... <br>\n\t\t\t\tUputstva za igru idu ovde... <br>\n\t\t\t\tUputstva za igru idu ovde... <br>\n\t\t\t</p>\n\t\t</div>\n\t</div>\n</body>\n","const names = require('../../assets/names.json');\nconst colors = require('../../assets/colors.json');\n\nexport class UserData {\n    // koristicemo javne prom da bismo\n    // im lakse pristupali\n\n    constructor(\n        public name: string,\n        public points: number,\n        public message: string,\n        public color: string\n    ) {\n        const indexColor: number = Math.floor(Math.random() * colors.length);\n        this.color = colors[indexColor];\n        if (this.name === '') {\n            const indexName: number = Math.floor(Math.random() * names.length);\n            this.name = names[indexName];\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-playground',\n  templateUrl: './playground.component.html',\n  styleUrls: ['./playground.component.css']\n})\nexport class PlaygroundComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<head>\n\t<link rel=\"icon\" href=\"assets/cope.jpg\" type=\"image/gif\" sizes=\"16x16\">\n</head>\n\n<body>\n    <app-whiteboard></app-whiteboard>\n\n    <div id=\"chat\">\n        <app-chat></app-chat>\n    </div>\n</body>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport * as io from 'socket.io-client';\nimport { CanvasData } from '../models/canvasData.model';\nimport { SocketService } from './socket.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanvasService {\n\n  private url = 'http://localhost:3000';\n  \n\n  constructor(private socketService: SocketService) {\n    \n  }\n\n  public sendCanvasData(data) {\n    this.socketService.socket.emit('client-drawing', data);\n  }\n\n  public getCanvasEvent() {\n    return new Observable((observer) => {\n      this.socketService.socket.on('drawing', (data) => {\n        observer.next(data);\n      });\n    });\n  }\n}\n","import { Injectable, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Observable } from 'rxjs/Observable';\nimport { catchError } from 'rxjs/operators';\n\nimport * as io from 'socket.io-client';\nimport { UserData } from '../models/user.model';\nimport { HttpErrorHandler } from '../utils/http-error-handler.model';\nimport { SocketService } from './socket.service';\n\n@Injectable({\n    providedIn: 'root',\n})\n\nexport class ChatService extends HttpErrorHandler {\n\n    private user: UserData;\n\n    constructor(private socketService: SocketService, private http: HttpClient, router: Router) {\n        super(router);\n        this.user = new UserData('', 0, '', '');\n    }\n\n    public setUsername(username: string) {\n        this.user = new UserData(username, 0, '', '');\n    }\n\n    public getColor() {\n        return this.user.color;\n    }\n\n    public joinToRoom(code: string): void {\n        this.socketService.socket.emit('joinGame', {code});\n    }\n\n    public createNewRoomRequest(roomName: string): void {\n        this.http.post(this.socketService.url + '/createRoom', {\"name\": roomName})\n                 .pipe(catchError(super.handleError()))\n                 .subscribe(code => {\n                    this.socketService.socket.emit('joinGame', code);\n                    window.alert(code);\n                 });\n    }\n\n    public sendMessage(message) {\n        this.user.message = message;\n        this.socketService.socket.emit('new-message', {\n            message: `${this.user.name}: ${this.user.message}`,\n            color: this.user.color\n        });\n    }\n\n    public getMessages(): Observable<any> {\n        return new Observable((observer) => {\n            this.socketService.socket.on('message', ({message, color}) => {\n                observer.next({message, color});\n            });\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n  private URL: string = 'http://localhost:' + (process.env.PORT || 3000);\n  private sock = io(this.URL);\n  constructor() {\n\n  }\n\n  get socket() {\n    return this.sock;\n  }\n  get url(): string {\n    return this.URL;\n  }\n\n}\n","import { Observable, throwError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nexport abstract class HttpErrorHandler {\n  constructor(private router: Router) {}\n\n  protected handleError() {\n    return (error: HttpErrorResponse): Observable<never> => {\n      if (error.error instanceof ErrorEvent) {\n        // A client-side or network error occurred. Handle it accordingly.\n        console.error('An error occurred:', error.error.message);\n      } else {\n        // The backend returned an unsuccessful response code.\n        // The response body may contain clues as to what went wrong,\n        this.router.navigate([\n          '/error',\n          { message: error.error.message, statusCode: error.status },\n        ]);\n      }\n      // return an observable with a user-facing error message\n      return throwError('Something bad happened; please try again later.');\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CanvasService } from '../services/canvas.service';\n\n@Component({\n  selector: 'app-whiteboard',\n  templateUrl: './whiteboard.component.html',\n  styleUrls: ['./whiteboard.component.css']\n})\nexport class WhiteboardComponent implements OnInit {\n\n  board: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  active = false;\n  htmlCanvas: HTMLElement;\n  rectCanvas: ClientRect;\n  penSize: number;\n  penColor: string;\n\n  constructor(private canvasService: CanvasService) {\n    this.canvasService\n      .getCanvasEvent()\n      .subscribe((data: string) => {\n        const img = new Image();\n        img.src = data;\n        // console.log(data);\n        this.ctx.drawImage(img, 0, 0);\n      });\n  }\n\n  sendCanvasData() {\n    this.canvasService.sendCanvasData(this.board.toDataURL());\n  }\n\n  ngOnInit(): void {\n    this.penColor = 'black';\n    this.penSize = 5;\n    this.htmlCanvas = document.getElementById('board');\n    this.rectCanvas = this.htmlCanvas.getBoundingClientRect();\n    this.board = (document.getElementById('board') as HTMLCanvasElement);\n    this.ctx = this.board.getContext('2d');\n    this.board.addEventListener('mousedown', (evt) => {\n      // console.log(evt);\n      this.sendCanvasData();\n      this.startDrawing(evt);\n    });\n    this.board.addEventListener('mouseup', (evt) => {\n      // console.log(evt);\n      this.sendCanvasData();\n      this.endDrawing();\n    });\n    this.board.addEventListener('mousemove', (evt) => {\n      // console.log(evt);\n      this.sendCanvasData();\n      this.draw(evt);\n    });\n\n  }\n\n\n\n  startDrawing(e: MouseEvent): void {\n\n    this.active = true;\n    this.draw(e);\n\n    // console.log('start drawing: active:' + this.active);\n\n  }\n\n  endDrawing(): void {\n\n    this.active = false;\n    this.ctx.beginPath();\n    // console.log('end drawing: active:' + this.active);\n  }\n\n  draw(e: MouseEvent): void {\n\n    // console.log('drawing...' + this.rectCanvas.left + this.rectCanvas.top);\n\n    if (!this.active) { return; }\n\n    this.ctx.lineWidth = this.penSize;\n    this.ctx.strokeStyle = this.penColor;\n    this.ctx.lineCap = 'round';\n    this.ctx.lineTo(e.clientX - this.rectCanvas.left, e.clientY - this.rectCanvas.top);\n    this.ctx.stroke();\n    this.ctx.beginPath();\n    this.ctx.moveTo(e.clientX - this.rectCanvas.left, e.clientY - this.rectCanvas.top);\n\n  }\n\n\n  onClearCanvas(): void {\n    this.ctx.clearRect(0, 0, this.board.width, this.board.height);\n    this.sendCanvasData();\n  }\n\n  onPenSmall(): void {\n    this.penSize = 5;\n  }\n\n  onPenMidSmall(): void {\n    this.penSize = 10;\n  }\n  onPenMidBig(): void {\n    this.penSize = 20;\n  }\n  onPenBig(): void {\n    this.penSize = 35;\n  }\n\n  public setColor() {\n    return { background: this.penColor };\n  }\n\n\n\n}\n\n\n","\n    <h1 style=\"cursor:default\">Škrabo</h1>\n    \n    <div id=\"canvas\" >\n      <canvas id=\"board\" width=\"740px\" height=\"450px\"> </canvas>\n    </div>\n    <div id=\"icons\">\n        <div class=\"iconBig\" id=\"iconBigCurrent\" [ngStyle]=\"setColor()\">\n \n        </div>\n        <div class=\"iconSmall\">\n           <div class=\"icon\" id=\"iconColor0\" (click)='penColor=\"#000000\"'>\n           </div>\n\n           <div class=\"icon\" id=\"iconColor1\" (click)='penColor=\"#808080\"'>           \n           </div>\n\n           <div class=\"icon\" id=\"iconColor2\" (click)='penColor=\"#99004c\"'> \n           </div>\n\n           <div class=\"icon\" id=\"iconColor3\" (click)='penColor=\"#ff0000\"'>\n           </div>\n\n           <div class=\"icon\" id=\"iconColor4\" (click)='penColor=\"#ff7b00\"'>\n           </div>\n\n           <div class=\"icon\" id=\"iconColor5\" (click)='penColor=\"#ffee00\"'>\n             \n           </div>\n           <div class=\"icon\" id=\"iconColor6\" (click)='penColor=\"#00ff00\"'>\n             \n           </div>\n           <div class=\"icon\" id=\"iconColor7\" (click)='penColor=\"#00994c\"'>\n             \n           </div>\n           <div class=\"icon\" id=\"iconColor8\" (click)='penColor=\"#00cccc\"'>\n             \n           </div>\n           <div class=\"icon\" id=\"iconColor9\" (click)='penColor=\"#0066cc\"'>\n             \n           </div>\n           <div class=\"icon\" id=\"iconColor10\" (click)='penColor=\"#0000cc\"'>\n             \n           </div>\n           <div class=\"icon\" id=\"iconColor11\" (click)='penColor=\"#ffffff\"'>\n \n           </div>\n           <div class=\"icon\" id=\"iconColor12\" (click)='penColor=\"#c0c0c0\"'>\n             \n           </div>\n           <div class=\"icon\" id=\"iconColor13\" (click)='penColor=\"#ff3366\"'>\n             \n           </div>\n           <div class=\"icon\" id=\"iconColor14\" (click)='penColor=\"#ff6666\"'>\n             \n           </div>\n           <div class=\"icon\" id=\"iconColor15\" (click)='penColor=\"#ffb266\"'>\n             \n           </div>\n           <div class=\"icon\" id=\"iconColor16\" (click)='penColor=\"#ffff66\"'>\n             \n           </div>\n           <div class=\"icon\" id=\"iconColor17\" (click)='penColor=\"#66ff66\"'>\n             \n           </div>\n           <div class=\"icon\" id=\"iconColor18\" (click)='penColor=\"#00cc66\"'>\n             \n           </div>\n           <div class=\"icon\" id=\"iconColor19\" (click)='penColor=\"#33ff99\"'>\n             \n           </div>\n           <div class=\"icon\" id=\"iconColor20\" (click)='penColor=\"#ff66ff\"'>\n             \n           </div>\n           <div class=\"icon\" id=\"iconColor21\" (click)='penColor=\"#990099\"'>\n             \n           </div>\n        </div>\n        <div class=\"iconBig\" id=\"bigIcon0\" (click)=\"onPenSmall()\">\n \n        </div>\n        <div class=\"iconBig\" id=\"bigIcon1\" (click)=\"onPenMidSmall()\">\n          \n       </div>\n       <div class=\"iconBig\" id=\"bigIcon2\" (click)=\"onPenMidBig()\">\n          \n       </div>\n       <div class=\"iconBig\" id=\"bigIcon3\" (click)=\"onPenBig()\">\n          \n       </div>\n       <div class=\"iconBig\" id=\"bigIcon4\" (click)=\"onClearCanvas()\">\n          \n       </div>\n\n    </div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}